Notatka z postêpu prac nad projektem z przedmiotu e-media.

data wykonania: 24.04.2018

grupa zajêciowa: wtorek 9:15

autorzy:
	Aleksander Pawlak 226318
	Mateusz Szyd³owski 226408

Wykonywany projekt jest programem zaimplementowanym w jêzyku C++ do dekodowania pliku wav, 
bêd¹cego plikiem bitowym i dokonuj¹cym odpowiedniej obróbki wczytanych danych.

Wykonanym w ostatnim czasie algorytmem by³ algorytm kodowania RSA.
Zaimplementowany zosta³ namespace "EncryptionAlgorithms" z nastêpuj¹cymi funkcjami:
RsaKeys generateKeys(int, int) - do generowania kluczy w postaci struktury trzech zmiennych dla podanych dwóch liczb pierwszych.

std::vector<short int> encryptRsa8 (const std::vector<short int>& inputData, const short int & e, const short int & n) - 
funkcja koduj¹ca dane z u¿yciem algorytmu rsa, przyjmuj¹ca wektor zmiennych typu short int, czyli 16 bitowych, odpowiadaj¹cych rozmiarowi standardowych sampli w pliku wav.
Zaimplementowana funkcja dzieli dane w wektorze na zmienne typu uint8_t, czyli zmienne 8 bitowe, które s¹ nastêpnie szyfrowane do 
zmiennych typu short int. Jest to zwi¹zane z tym, ¿e zakodowane wartoœci liczbowe bêd¹ wiêksze od oryginalnych i mog¹ wychodziæ poza zakres
typu uint8_t. W zwi¹zku z takim dzia³aniem zwracany wektor jest dwa razy wiêkszy.

std::vector<short int> decryptRsa8(const std::vector<short int>& inputData, const short int & e, const short int & n) - 
funkcja dekoduj¹ca dane przy u¿yciu algorytmu rsa. Funkcja zak³ada, ¿e dane zakodowane s¹ algorytmem encryptRsa8, wobec czego z wektora
wejœciowego pobiera po dwie zmienne, bêd¹ce blokami po 16 bitow i koduje je do jednego bloku 16 bitowego. Wyjœciowy wekto jest dwa razy mniejszy od wejœciowego.

Algorytmy szyfruj¹ce sprawdzone by³y przy u¿yciu metod:
void setData(std::vector<short int> inputData) oraz void writeToFile(std::string filename) nale¿acymi do klasy WavDecoder.
Po zapisaniu pliku z zaszyrowanymi danymi dla przyk³adowego dŸwiêku s³ychaæ by³o jedynie szum, natomiast po odszyfrowanius³yszalny by³ oryginalny dŸwiêk.